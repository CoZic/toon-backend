developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
의존성 주입 시 흐름

---------------------------------------------------------------------------------------------------------------

1. IntelliJ에서 'Run' 

2. developmentOnly 'org.springframework.boot:spring-boot-docker-compose' 의존성으로 의해
	docker-compose.yml 있는지 확인
	
3. docker-compose.yml 파일이 존재한다면 docker-compose up 명령을 실행
	- docker-compose up : docker-compose.yml에 정의된 모든 서비스(여기서는 myapp과 db)를 시작하려고 시도
		1. 필요한 이미지 준비(순서 상관X)
			* 해당 이미지가 이미 있다면 생성/다운로드 스킵
		
		2. 기본 네트워크 설정(따로 설정 없이 자동으로 실행됨)
			네트워크명 : <프로젝트명>_defalut
			> docker-compose.yml 파일안에 정의된 모든서비스를 해당 네트워크에 자동으로 연결
			* 네트워크 확인 : docker network ls
			
		3. 컨테이너 실행(depends_on 설정에 따라 실행 순서 설정 가능)
			* db가 먼저 실행되어야 백앤드 어플리케이션 컨테이너 실행 시 DB연결이 가능하므로 실행순서 설정을 해야함
			* 해당 컨테이너가 있다면 기존에 있던것이 시작

================================================================================================================================================================
	3-1. 이미지명 설정
		
		● 이미지를 가저올 시
			==============================
			services:    
				db: 
					image: mysql:8.0
			==============================
				> Docker Hub라는 공용 이미지 저장소에서 mysql이라는 이름의 이미지를 가져와서(pull) 사용하겠다는 의미
				> 이미지 이름이 mysql:8.0로 보임
		

		● 이미지를 직접 빌드 시
			==============================	
			services:
				myapp:	# 서비스명
					build:
						context: . 
						dockerfile: Dockerfile
			==============================
				1. [context: . ]: 이미지를 직접 빌드(build)하겠다는 의미 
									> 직접빌드 : Dockerfile의 설정대로 이미지 빌드
				2. Docker Compose가 이미지를 직접 빌드할 때의 기본 이름 규칙 : <프로젝트명>-<서비스명>
					* 서비스명 : services:[서비스명]
					
	3-2. 컨테이너명 설정
		Docker Compose가 컨테이너를 실행할 때의 기본 이름 규칙 : <프로젝트명>-<서비스명>-<번호>
		
	